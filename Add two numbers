
/*Add two numbers
You are given two non-empty linked lists representing two non-negative integers.
The digits are stored in reverse order, and each of their nodes contains a single digit. 
Add the two numbers and return the sum as a linked list.


*/





/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
     public ListNode addTwoNumbers(ListNode l1, ListNode l2){
            ListNode res=null;
            int carry=0;

            while(l1!=null || l2!=null){
                int sum=0;
                if(l1==null){
                  sum=l2.val+carry;
                  l2=l2.next;
                  carry=sum/10;
                  sum=sum%10;
                  ListNode node=new ListNode(sum);
                  if(res==null){
                      res=node;
                  }
                  else {
                      node.next=res;
                      res=node;
                  }



                }
                else if(l2==null){
                    sum=l1.val+carry;
                    l1=l1.next;
                    carry=sum/10;
                    sum=sum%10;
                    ListNode node=new ListNode(sum);
                    if(res==null){
                        res=node;
                    }
                    else {
                        node.next=res;
                        res=node;
                    }


                }
                else {
                    sum=l2.val+carry+l1.val;
                    l1=l1.next;
                    l2=l2.next;
                    carry=sum/10;
                    sum=sum%10;
                    ListNode node=new ListNode(sum);
                    if(res==null){
                        res=node;
                    }
                    else {
                        node.next=res;
                        res=node;
                    }


                }



            }
            if(carry==1){
                ListNode node=new ListNode(carry);
                if(res==null){
                    res=node;
                }
                else {
                    node.next=res;
                    res=node;
                }

            }
         
           ListNode fin=null;
            while(res!=null){
                
                ListNode temp=new ListNode(res.val);
                if(fin==null){
                    fin=temp;
                }
                else{
                    
                    temp.next=fin;
                    fin=temp;
                }
                res=res.next;
                
            }

            return fin;


           
        }
}
