public static String LongestPalindrome(String  s){
        int l=s.length();
        boolean mat[][]= new boolean[l][l];
        int max=1;
        int strtInd=0;
        int lstInd=0;
        for(int i=0;i<l;i++){
            mat[i][i]=true;
        }
        for(int i=0;i<l-1;i++){
            if(s.charAt(i)==s.charAt(i+1)){
                mat[i][i+1]=true;
                strtInd=i;
                lstInd=i+1;
                max=2;
            }
        }
        for(int k=3;k<=l;k++){
            for(int i=0;i<l-(k-1);i++){
                int j=i+k-1;
                //System.out.println(j);
                if((s.charAt(i)==s.charAt(j))&&mat[i+1][j-1]){
                    mat[i][j]=true;
                    if(k>max){
                        max=k;
                        strtInd=i;
                        lstInd=j;
                    }
                }
            }
        }
        System.out.println(strtInd);
        String res="";
        for(int i=strtInd;i<=lstInd;i++){
            res+=s.charAt(i);

        }
        




        return res;

    }
